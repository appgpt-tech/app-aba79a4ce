//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { ArtistsEntity } from './db/Artists.entity';
import { SongsEntity } from './db/Songs.entity';
import { AlbumsEntity } from './db/Albums.entity';
import { ChartsEntity } from './db/Charts.entity';
import { PlatformsEntity } from './db/Platforms.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      ArtistsEntity,
      SongsEntity,
      AlbumsEntity,
      ChartsEntity,
      PlatformsEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Artists: [
        { name: 'name 1', genre: 'genre 1', country: 'country 1', id: 90 },
        { name: 'name 2', genre: 'genre 2', country: 'country 2', id: 15 },
        { name: 'name 3', genre: 'genre 3', country: 'country 3', id: 95 },
        { name: 'name 4', genre: 'genre 4', country: 'country 4', id: 15 },
        { name: 'name 5', genre: 'genre 5', country: 'country 5', id: 18 },
      ],
      Songs: [
        {
          title: 'title 1',
          releaseDate: '2024-04-04T11:20:45.521Z',
          artist: 1,
          genre: 'genre 1',
          id: 98,
        },
        {
          title: 'title 2',
          releaseDate: '2024-07-04T20:04:57.825Z',
          artist: 2,
          genre: 'genre 2',
          id: 78,
        },
        {
          title: 'title 3',
          releaseDate: '2024-10-20T07:36:03.152Z',
          artist: 3,
          genre: 'genre 3',
          id: 35,
        },
        {
          title: 'title 4',
          releaseDate: '2025-01-12T12:01:36.599Z',
          artist: 4,
          genre: 'genre 4',
          id: 9,
        },
        {
          title: 'title 5',
          releaseDate: '2023-10-15T09:25:42.001Z',
          artist: 5,
          genre: 'genre 5',
          id: 32,
        },
      ],
      Albums: [
        {
          title: 'title 1',
          releaseDate: '2023-11-14T08:03:36.763Z',
          artist: 1,
          songs: 1,
          id: 91,
        },
        {
          title: 'title 2',
          releaseDate: '2024-04-18T20:19:53.116Z',
          artist: 2,
          songs: 2,
          id: 5,
        },
        {
          title: 'title 3',
          releaseDate: '2023-10-18T13:31:07.795Z',
          artist: 3,
          songs: 3,
          id: 37,
        },
        {
          title: 'title 4',
          releaseDate: '2023-11-17T04:07:22.247Z',
          artist: 4,
          songs: 4,
          id: 0,
        },
        {
          title: 'title 5',
          releaseDate: '2024-05-24T10:03:50.742Z',
          artist: 5,
          songs: 5,
          id: 26,
        },
      ],
      Charts: [
        {
          chartName: 'chartName 1',
          date: '2023-10-18T14:48:11.926Z',
          ranking: 1,
          song: 1,
          platform: 1,
          id: 77,
        },
        {
          chartName: 'chartName 2',
          date: '2024-05-29T06:27:57.487Z',
          ranking: 2,
          song: 2,
          platform: 2,
          id: 50,
        },
        {
          chartName: 'chartName 3',
          date: '2025-03-09T23:40:45.845Z',
          ranking: 3,
          song: 3,
          platform: 3,
          id: 62,
        },
        {
          chartName: 'chartName 4',
          date: '2024-02-02T04:22:59.803Z',
          ranking: 4,
          song: 4,
          platform: 4,
          id: 9,
        },
        {
          chartName: 'chartName 5',
          date: '2024-12-19T15:19:46.286Z',
          ranking: 5,
          song: 5,
          platform: 5,
          id: 4,
        },
      ],
      Platforms: [
        { name: 'name 1', type: 'type 1', region: 'region 1', id: 37 },
        { name: 'name 2', type: 'type 2', region: 'region 2', id: 91 },
        { name: 'name 3', type: 'type 3', region: 'region 3', id: 32 },
        { name: 'name 4', type: 'type 4', region: 'region 4', id: 25 },
        { name: 'name 5', type: 'type 5', region: 'region 5', id: 17 },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('ArtistsEntity', data.Artists);
      await this.SeedResource('SongsEntity', data.Songs);
      await this.SeedResource('AlbumsEntity', data.Albums);
      await this.SeedResource('ChartsEntity', data.Charts);
      await this.SeedResource('PlatformsEntity', data.Platforms);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
